Talloc2 is lightweight implementation of a part of talloc api. License - LGPL v3.
1. Minimal sizeof talloc_chunk is 32 bytes (amd64).
2. Save memory without performance penalties.
2. Configurable extensions.
3. CMake build system. Project is ready to be added as git submodule to existing CMake project.

mkdir build
cd build
cmake ..
make
make test

core:
void *  talloc_new     ( const void * parent )
void *  talloc         ( const void * parent, size_t length )
void *  talloc_zero    ( const void * parent, size_t length )
void *  talloc_realloc ( const void * child,  size_t length )
uint8_t talloc_move    ( const void * child,  const void * parent )
uint8_t talloc_free    ( void * root )

helpers:
char * talloc_strndup ( const void * parent, const char * str, size_t length )
char * talloc_strdup  ( const void * parent, const char * str )

destructor extension:
uint8_t talloc_add_destructor             ( const void * child, talloc_destructor destructor, void * data )
uint8_t talloc_del_destructor             ( const void * child, talloc_destructor destructor, void * data )
uint8_t talloc_del_destructor_by_function ( const void * child, talloc_destructor destructor )
uint8_t talloc_del_destructor_by_data     ( const void * child, void * data )
uint8_t talloc_clear_destructors          ( const void * child )

length extension:
uint8_t talloc_get_length ( const void * child, size_t * length )
node should be create with
void *  talloc_mode      ( const void * parent_data, size_t length, TALLOC_MODE_LENGTH )
void *  talloc_zero_mode ( const void * parent_data, size_t length, TALLOC_MODE_LENGTH )

dynarr util:
talloc_dynarr * talloc_dynarr_new        ( void * ctx, size_t capacity )
uint8_t         talloc_dynarr_push       ( talloc_dynarr * arr, void * data )
uint8_t         talloc_dynarr_pop        ( talloc_dynarr * arr )
void            talloc_dynarr_set        ( talloc_dynarr * arr, size_t position, void * pointer )
void *          talloc_dynarr_get        ( talloc_dynarr * arr, size_t position )
size_t          talloc_dynarr_get_length ( talloc_dynarr * arr )

buffer util:
talloc_buffer * talloc_buffer_new ( void * ctx )
char *          talloc_buffer_get ( talloc_buffer * buffer, size_t length )
uint8_t         talloc_buffer_cut ( talloc_buffer * buffer, size_t diff )

list util:
talloc_list * talloc_list_new        ( void * ctx )
uint8_t       talloc_list_push       ( talloc_list * list, void * data )
uint8_t       talloc_list_unshift    ( talloc_list * list, void * data )
size_t        talloc_list_get_length ( talloc_list * list )