cmake_minimum_required (VERSION 2.8)
project (talloc2)

if (NOT DEFINED TALLOC_DEBUG)
    set (TALLOC_DEBUG true)
endif ()
if (NOT DEFINED TALLOC_EXTENSIONS_DESTRUCTOR)
    set (TALLOC_EXTENSIONS_DESTRUCTOR true)
endif ()
if (NOT DEFINED TALLOC_REFERENCE)
    set (TALLOC_REFERENCE true)
endif ()
if (NOT DEFINED TALLOC_UTILS_BUFFER)
    set (TALLOC_UTILS_BUFFER true)
endif ()
if (NOT DEFINED TALLOC_UTILS_DYNARR)
    set (TALLOC_UTILS_DYNARR true)
endif ()
if (NOT DEFINED TALLOC_SHARED)
    set (TALLOC_SHARED true)
endif ()
if (NOT DEFINED TALLOC_STATIC)
    set (TALLOC_STATIC true)
endif ()
if (NOT DEFINED TALLOC_TEST)
    set (TALLOC_TEST true)
endif ()

if (TALLOC_UTILS_BUFFER MATCHES true OR TALLOC_UTILS_DYNARR MATCHES true)
    set (TALLOC_UTILS true)
endif ()
if (TALLOC_EXTENSIONS_DESTRUCTOR MATCHES true OR TALLOC_REFERENCE MATCHES true)
    set (TALLOC_EXTENSIONS true)
endif ()

if (NOT DEFINED TALLOC_TARGET)
    set (TALLOC_TARGET ${PROJECT_NAME})
endif ()

if (NOT DEFINED CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "")
    set (CMAKE_BUILD_TYPE DEBUG)
endif ()

set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Winline -std=gnu99")

set (CMAKE_C_FLAGS_DEBUG    "-O0 -g")
set (CMAKE_C_FLAGS_RELEASE  "-O2 -flto")
set (CMAKE_LD_FLAGS_RELEASE "-flto")

add_subdirectory (src)

include_directories ("src/")

if (TALLOC_TEST MATCHES true)
    enable_testing ()
    add_subdirectory (tests)
endif ()